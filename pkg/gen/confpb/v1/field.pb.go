// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2-devel
// 	protoc        (unknown)
// source: confpb/v1/field.proto

package confpbv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Specify defaults for a message field
type Default struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Define a default for the field, the use the same field_type as the type of the field this option is set on.
	//
	// Types that are assignable to FieldType:
	//
	//	*Default_Double
	//	*Default_Float
	//	*Default_Int32
	//	*Default_Int64
	//	*Default_Uint32
	//	*Default_Uint64
	//	*Default_Sint32
	//	*Default_Sint64
	//	*Default_Fixed32
	//	*Default_Fixed64
	//	*Default_Sfixed32
	//	*Default_Sfixed64
	//	*Default_Bool
	//	*Default_String_
	//	*Default_Bytes
	//	*Default_Enum
	//	*Default_Timestamp
	//	*Default_Duration
	//	*Default_Struct
	//	*Default_Value
	//	*Default_Message_
	//	*Default_RepeatedDouble_
	//	*Default_RepeatedFloat_
	//	*Default_RepeatedInt32_
	//	*Default_RepeatedInt64_
	//	*Default_RepeatedUint32_
	//	*Default_RepeatedUint64_
	//	*Default_RepeatedSint32_
	//	*Default_RepeatedSint64_
	//	*Default_RepeatedFixed32_
	//	*Default_RepeatedFixed64_
	//	*Default_RepeatedSfixed32_
	//	*Default_RepeatedSfixed64_
	//	*Default_RepeatedBool_
	//	*Default_RepeatedString_
	//	*Default_RepeatedBytes_
	//	*Default_RepeatedEnum_
	//	*Default_RepeatedTimestamp_
	//	*Default_RepeatedDuration_
	//	*Default_RepeatedStruct_
	//	*Default_RepeatedValue_
	//	*Default_RepeatedMessage_
	//	*Default_Map_
	FieldType isDefault_FieldType `protobuf_oneof:"field_type"`
}

func (x *Default) Reset() {
	*x = Default{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default) ProtoMessage() {}

func (x *Default) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default.ProtoReflect.Descriptor instead.
func (*Default) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0}
}

func (m *Default) GetFieldType() isDefault_FieldType {
	if m != nil {
		return m.FieldType
	}
	return nil
}

func (x *Default) GetDouble() float64 {
	if x, ok := x.GetFieldType().(*Default_Double); ok {
		return x.Double
	}
	return 0
}

func (x *Default) GetFloat() float32 {
	if x, ok := x.GetFieldType().(*Default_Float); ok {
		return x.Float
	}
	return 0
}

func (x *Default) GetInt32() int32 {
	if x, ok := x.GetFieldType().(*Default_Int32); ok {
		return x.Int32
	}
	return 0
}

func (x *Default) GetInt64() int64 {
	if x, ok := x.GetFieldType().(*Default_Int64); ok {
		return x.Int64
	}
	return 0
}

func (x *Default) GetUint32() uint32 {
	if x, ok := x.GetFieldType().(*Default_Uint32); ok {
		return x.Uint32
	}
	return 0
}

func (x *Default) GetUint64() uint64 {
	if x, ok := x.GetFieldType().(*Default_Uint64); ok {
		return x.Uint64
	}
	return 0
}

func (x *Default) GetSint32() int32 {
	if x, ok := x.GetFieldType().(*Default_Sint32); ok {
		return x.Sint32
	}
	return 0
}

func (x *Default) GetSint64() int64 {
	if x, ok := x.GetFieldType().(*Default_Sint64); ok {
		return x.Sint64
	}
	return 0
}

func (x *Default) GetFixed32() uint32 {
	if x, ok := x.GetFieldType().(*Default_Fixed32); ok {
		return x.Fixed32
	}
	return 0
}

func (x *Default) GetFixed64() uint64 {
	if x, ok := x.GetFieldType().(*Default_Fixed64); ok {
		return x.Fixed64
	}
	return 0
}

func (x *Default) GetSfixed32() int32 {
	if x, ok := x.GetFieldType().(*Default_Sfixed32); ok {
		return x.Sfixed32
	}
	return 0
}

func (x *Default) GetSfixed64() int64 {
	if x, ok := x.GetFieldType().(*Default_Sfixed64); ok {
		return x.Sfixed64
	}
	return 0
}

func (x *Default) GetBool() bool {
	if x, ok := x.GetFieldType().(*Default_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Default) GetString_() string {
	if x, ok := x.GetFieldType().(*Default_String_); ok {
		return x.String_
	}
	return ""
}

func (x *Default) GetBytes() string {
	if x, ok := x.GetFieldType().(*Default_Bytes); ok {
		return x.Bytes
	}
	return ""
}

func (x *Default) GetEnum() string {
	if x, ok := x.GetFieldType().(*Default_Enum); ok {
		return x.Enum
	}
	return ""
}

func (x *Default) GetTimestamp() string {
	if x, ok := x.GetFieldType().(*Default_Timestamp); ok {
		return x.Timestamp
	}
	return ""
}

func (x *Default) GetDuration() string {
	if x, ok := x.GetFieldType().(*Default_Duration); ok {
		return x.Duration
	}
	return ""
}

func (x *Default) GetStruct() string {
	if x, ok := x.GetFieldType().(*Default_Struct); ok {
		return x.Struct
	}
	return ""
}

func (x *Default) GetValue() string {
	if x, ok := x.GetFieldType().(*Default_Value); ok {
		return x.Value
	}
	return ""
}

func (x *Default) GetMessage() *Default_Message {
	if x, ok := x.GetFieldType().(*Default_Message_); ok {
		return x.Message
	}
	return nil
}

func (x *Default) GetRepeatedDouble() *Default_RepeatedDouble {
	if x, ok := x.GetFieldType().(*Default_RepeatedDouble_); ok {
		return x.RepeatedDouble
	}
	return nil
}

func (x *Default) GetRepeatedFloat() *Default_RepeatedFloat {
	if x, ok := x.GetFieldType().(*Default_RepeatedFloat_); ok {
		return x.RepeatedFloat
	}
	return nil
}

func (x *Default) GetRepeatedInt32() *Default_RepeatedInt32 {
	if x, ok := x.GetFieldType().(*Default_RepeatedInt32_); ok {
		return x.RepeatedInt32
	}
	return nil
}

func (x *Default) GetRepeatedInt64() *Default_RepeatedInt64 {
	if x, ok := x.GetFieldType().(*Default_RepeatedInt64_); ok {
		return x.RepeatedInt64
	}
	return nil
}

func (x *Default) GetRepeatedUint32() *Default_RepeatedUint32 {
	if x, ok := x.GetFieldType().(*Default_RepeatedUint32_); ok {
		return x.RepeatedUint32
	}
	return nil
}

func (x *Default) GetRepeatedUint64() *Default_RepeatedUint64 {
	if x, ok := x.GetFieldType().(*Default_RepeatedUint64_); ok {
		return x.RepeatedUint64
	}
	return nil
}

func (x *Default) GetRepeatedSint32() *Default_RepeatedSint32 {
	if x, ok := x.GetFieldType().(*Default_RepeatedSint32_); ok {
		return x.RepeatedSint32
	}
	return nil
}

func (x *Default) GetRepeatedSint64() *Default_RepeatedSint64 {
	if x, ok := x.GetFieldType().(*Default_RepeatedSint64_); ok {
		return x.RepeatedSint64
	}
	return nil
}

func (x *Default) GetRepeatedFixed32() *Default_RepeatedFixed32 {
	if x, ok := x.GetFieldType().(*Default_RepeatedFixed32_); ok {
		return x.RepeatedFixed32
	}
	return nil
}

func (x *Default) GetRepeatedFixed64() *Default_RepeatedFixed64 {
	if x, ok := x.GetFieldType().(*Default_RepeatedFixed64_); ok {
		return x.RepeatedFixed64
	}
	return nil
}

func (x *Default) GetRepeatedSfixed32() *Default_RepeatedSfixed32 {
	if x, ok := x.GetFieldType().(*Default_RepeatedSfixed32_); ok {
		return x.RepeatedSfixed32
	}
	return nil
}

func (x *Default) GetRepeatedSfixed64() *Default_RepeatedSfixed64 {
	if x, ok := x.GetFieldType().(*Default_RepeatedSfixed64_); ok {
		return x.RepeatedSfixed64
	}
	return nil
}

func (x *Default) GetRepeatedBool() *Default_RepeatedBool {
	if x, ok := x.GetFieldType().(*Default_RepeatedBool_); ok {
		return x.RepeatedBool
	}
	return nil
}

func (x *Default) GetRepeatedString() *Default_RepeatedString {
	if x, ok := x.GetFieldType().(*Default_RepeatedString_); ok {
		return x.RepeatedString
	}
	return nil
}

func (x *Default) GetRepeatedBytes() *Default_RepeatedBytes {
	if x, ok := x.GetFieldType().(*Default_RepeatedBytes_); ok {
		return x.RepeatedBytes
	}
	return nil
}

func (x *Default) GetRepeatedEnum() *Default_RepeatedEnum {
	if x, ok := x.GetFieldType().(*Default_RepeatedEnum_); ok {
		return x.RepeatedEnum
	}
	return nil
}

func (x *Default) GetRepeatedTimestamp() *Default_RepeatedTimestamp {
	if x, ok := x.GetFieldType().(*Default_RepeatedTimestamp_); ok {
		return x.RepeatedTimestamp
	}
	return nil
}

func (x *Default) GetRepeatedDuration() *Default_RepeatedDuration {
	if x, ok := x.GetFieldType().(*Default_RepeatedDuration_); ok {
		return x.RepeatedDuration
	}
	return nil
}

func (x *Default) GetRepeatedStruct() *Default_RepeatedStruct {
	if x, ok := x.GetFieldType().(*Default_RepeatedStruct_); ok {
		return x.RepeatedStruct
	}
	return nil
}

func (x *Default) GetRepeatedValue() *Default_RepeatedValue {
	if x, ok := x.GetFieldType().(*Default_RepeatedValue_); ok {
		return x.RepeatedValue
	}
	return nil
}

func (x *Default) GetRepeatedMessage() *Default_RepeatedMessage {
	if x, ok := x.GetFieldType().(*Default_RepeatedMessage_); ok {
		return x.RepeatedMessage
	}
	return nil
}

func (x *Default) GetMap() *Default_Map {
	if x, ok := x.GetFieldType().(*Default_Map_); ok {
		return x.Map
	}
	return nil
}

type isDefault_FieldType interface {
	isDefault_FieldType()
}

type Default_Double struct {
	// Specify a default for a double field
	Double float64 `protobuf:"fixed64,1,opt,name=double,proto3,oneof"`
}

type Default_Float struct {
	// Specify a default for a float field
	Float float32 `protobuf:"fixed32,2,opt,name=float,proto3,oneof"`
}

type Default_Int32 struct {
	// Specify a default for an int32 field
	Int32 int32 `protobuf:"varint,3,opt,name=int32,proto3,oneof"`
}

type Default_Int64 struct {
	// Specify a default for an int64 field
	Int64 int64 `protobuf:"varint,4,opt,name=int64,proto3,oneof"`
}

type Default_Uint32 struct {
	// Specify a default for a uint32 field
	Uint32 uint32 `protobuf:"varint,5,opt,name=uint32,proto3,oneof"`
}

type Default_Uint64 struct {
	// Specify a default for a uint64 field
	Uint64 uint64 `protobuf:"varint,6,opt,name=uint64,proto3,oneof"`
}

type Default_Sint32 struct {
	// Specify a default for a sint32 field
	Sint32 int32 `protobuf:"zigzag32,7,opt,name=sint32,proto3,oneof"`
}

type Default_Sint64 struct {
	// Specify a default for a sint64 field
	Sint64 int64 `protobuf:"zigzag64,8,opt,name=sint64,proto3,oneof"`
}

type Default_Fixed32 struct {
	// Specify a default for a fixed32 field
	Fixed32 uint32 `protobuf:"fixed32,9,opt,name=fixed32,proto3,oneof"`
}

type Default_Fixed64 struct {
	// Specify a default for a fixed64 field
	Fixed64 uint64 `protobuf:"fixed64,10,opt,name=fixed64,proto3,oneof"`
}

type Default_Sfixed32 struct {
	// Specify a default for a sfixed32 field
	Sfixed32 int32 `protobuf:"fixed32,11,opt,name=sfixed32,proto3,oneof"`
}

type Default_Sfixed64 struct {
	// Specify a default for a sfixed64 field
	Sfixed64 int64 `protobuf:"fixed64,12,opt,name=sfixed64,proto3,oneof"`
}

type Default_Bool struct {
	// Specify a default for a bool field
	Bool bool `protobuf:"varint,13,opt,name=bool,proto3,oneof"`
}

type Default_String_ struct {
	// Specify a default for a string field
	String_ string `protobuf:"bytes,14,opt,name=string,proto3,oneof"`
}

type Default_Bytes struct {
	// Specify a default for a bytes field. Default value should be base64 encoded.
	Bytes string `protobuf:"bytes,15,opt,name=bytes,proto3,oneof"`
}

type Default_Enum struct {
	// Specify a default for an enum field. Default value should be the string value of an enum option.
	Enum string `protobuf:"bytes,16,opt,name=enum,proto3,oneof"`
}

type Default_Timestamp struct {
	// Specify a default for a google.protobuf.Timestamp field. Default value should be an RFC3339 string.
	Timestamp string `protobuf:"bytes,17,opt,name=timestamp,proto3,oneof"`
}

type Default_Duration struct {
	// Specify a default for a google.protobuf.Duration field. Default value should be supplied as a duration string (e.g. 10s).
	Duration string `protobuf:"bytes,18,opt,name=duration,proto3,oneof"`
}

type Default_Struct struct {
	// Specify a default for a google.protobuf.Struct field. Default value should be a JSON object.
	Struct string `protobuf:"bytes,19,opt,name=struct,proto3,oneof"`
}

type Default_Value struct {
	// Specify a default for a google.protobuf.Value field. Default value should be a JSON value.
	Value string `protobuf:"bytes,20,opt,name=value,proto3,oneof"`
}

type Default_Message_ struct {
	// Specify a default for a message field
	Message *Default_Message `protobuf:"bytes,21,opt,name=message,proto3,oneof"`
}

type Default_RepeatedDouble_ struct {
	// Specify a default for a repeated double field
	RepeatedDouble *Default_RepeatedDouble `protobuf:"bytes,22,opt,name=repeated_double,json=repeatedDouble,proto3,oneof"`
}

type Default_RepeatedFloat_ struct {
	// Specify a default for a repeated float field
	RepeatedFloat *Default_RepeatedFloat `protobuf:"bytes,23,opt,name=repeated_float,json=repeatedFloat,proto3,oneof"`
}

type Default_RepeatedInt32_ struct {
	// Specify a default for a repeated int32 field
	RepeatedInt32 *Default_RepeatedInt32 `protobuf:"bytes,24,opt,name=repeated_int32,json=repeatedInt32,proto3,oneof"`
}

type Default_RepeatedInt64_ struct {
	// Specify a default for a repeated int64 field
	RepeatedInt64 *Default_RepeatedInt64 `protobuf:"bytes,25,opt,name=repeated_int64,json=repeatedInt64,proto3,oneof"`
}

type Default_RepeatedUint32_ struct {
	// Specify a default for a repeated uint32 field
	RepeatedUint32 *Default_RepeatedUint32 `protobuf:"bytes,26,opt,name=repeated_uint32,json=repeatedUint32,proto3,oneof"`
}

type Default_RepeatedUint64_ struct {
	// Specify a default for a repeated uint64 field
	RepeatedUint64 *Default_RepeatedUint64 `protobuf:"bytes,27,opt,name=repeated_uint64,json=repeatedUint64,proto3,oneof"`
}

type Default_RepeatedSint32_ struct {
	// Specify a default for a repeated sint32 field
	RepeatedSint32 *Default_RepeatedSint32 `protobuf:"bytes,28,opt,name=repeated_sint32,json=repeatedSint32,proto3,oneof"`
}

type Default_RepeatedSint64_ struct {
	// Specify a default for a repeated sint64 field
	RepeatedSint64 *Default_RepeatedSint64 `protobuf:"bytes,29,opt,name=repeated_sint64,json=repeatedSint64,proto3,oneof"`
}

type Default_RepeatedFixed32_ struct {
	// Specify a default for a repeated fixed32 field
	RepeatedFixed32 *Default_RepeatedFixed32 `protobuf:"bytes,30,opt,name=repeated_fixed32,json=repeatedFixed32,proto3,oneof"`
}

type Default_RepeatedFixed64_ struct {
	// Specify a default for a repeated fixed64 field
	RepeatedFixed64 *Default_RepeatedFixed64 `protobuf:"bytes,31,opt,name=repeated_fixed64,json=repeatedFixed64,proto3,oneof"`
}

type Default_RepeatedSfixed32_ struct {
	// Specify a default for a repeated sfixed32 field
	RepeatedSfixed32 *Default_RepeatedSfixed32 `protobuf:"bytes,32,opt,name=repeated_sfixed32,json=repeatedSfixed32,proto3,oneof"`
}

type Default_RepeatedSfixed64_ struct {
	// Specify a default for a repeated sfixed64 field
	RepeatedSfixed64 *Default_RepeatedSfixed64 `protobuf:"bytes,33,opt,name=repeated_sfixed64,json=repeatedSfixed64,proto3,oneof"`
}

type Default_RepeatedBool_ struct {
	// Specify a default for a repeated bool field
	RepeatedBool *Default_RepeatedBool `protobuf:"bytes,34,opt,name=repeated_bool,json=repeatedBool,proto3,oneof"`
}

type Default_RepeatedString_ struct {
	// Specify a default for a repeated string field
	RepeatedString *Default_RepeatedString `protobuf:"bytes,35,opt,name=repeated_string,json=repeatedString,proto3,oneof"`
}

type Default_RepeatedBytes_ struct {
	// Specify a default for a repeated bytes field
	RepeatedBytes *Default_RepeatedBytes `protobuf:"bytes,36,opt,name=repeated_bytes,json=repeatedBytes,proto3,oneof"`
}

type Default_RepeatedEnum_ struct {
	// Specify a default for a repeated enum field
	RepeatedEnum *Default_RepeatedEnum `protobuf:"bytes,37,opt,name=repeated_enum,json=repeatedEnum,proto3,oneof"`
}

type Default_RepeatedTimestamp_ struct {
	// Specify a default for a repeated google.protobuf.Timestamp field
	RepeatedTimestamp *Default_RepeatedTimestamp `protobuf:"bytes,38,opt,name=repeated_timestamp,json=repeatedTimestamp,proto3,oneof"`
}

type Default_RepeatedDuration_ struct {
	// Specify a default for a repeated google.protobuf.Duration field
	RepeatedDuration *Default_RepeatedDuration `protobuf:"bytes,39,opt,name=repeated_duration,json=repeatedDuration,proto3,oneof"`
}

type Default_RepeatedStruct_ struct {
	// Specify a default for a repeated google.protobuf.Struct field
	RepeatedStruct *Default_RepeatedStruct `protobuf:"bytes,40,opt,name=repeated_struct,json=repeatedStruct,proto3,oneof"`
}

type Default_RepeatedValue_ struct {
	// Specify a default for a repeated google.protobuf.Value field
	RepeatedValue *Default_RepeatedValue `protobuf:"bytes,41,opt,name=repeated_value,json=repeatedValue,proto3,oneof"`
}

type Default_RepeatedMessage_ struct {
	// Specify a default for a repeated message field
	RepeatedMessage *Default_RepeatedMessage `protobuf:"bytes,42,opt,name=repeated_message,json=repeatedMessage,proto3,oneof"`
}

type Default_Map_ struct {
	// Specify a default for a map field
	Map *Default_Map `protobuf:"bytes,43,opt,name=map,proto3,oneof"`
}

func (*Default_Double) isDefault_FieldType() {}

func (*Default_Float) isDefault_FieldType() {}

func (*Default_Int32) isDefault_FieldType() {}

func (*Default_Int64) isDefault_FieldType() {}

func (*Default_Uint32) isDefault_FieldType() {}

func (*Default_Uint64) isDefault_FieldType() {}

func (*Default_Sint32) isDefault_FieldType() {}

func (*Default_Sint64) isDefault_FieldType() {}

func (*Default_Fixed32) isDefault_FieldType() {}

func (*Default_Fixed64) isDefault_FieldType() {}

func (*Default_Sfixed32) isDefault_FieldType() {}

func (*Default_Sfixed64) isDefault_FieldType() {}

func (*Default_Bool) isDefault_FieldType() {}

func (*Default_String_) isDefault_FieldType() {}

func (*Default_Bytes) isDefault_FieldType() {}

func (*Default_Enum) isDefault_FieldType() {}

func (*Default_Timestamp) isDefault_FieldType() {}

func (*Default_Duration) isDefault_FieldType() {}

func (*Default_Struct) isDefault_FieldType() {}

func (*Default_Value) isDefault_FieldType() {}

func (*Default_Message_) isDefault_FieldType() {}

func (*Default_RepeatedDouble_) isDefault_FieldType() {}

func (*Default_RepeatedFloat_) isDefault_FieldType() {}

func (*Default_RepeatedInt32_) isDefault_FieldType() {}

func (*Default_RepeatedInt64_) isDefault_FieldType() {}

func (*Default_RepeatedUint32_) isDefault_FieldType() {}

func (*Default_RepeatedUint64_) isDefault_FieldType() {}

func (*Default_RepeatedSint32_) isDefault_FieldType() {}

func (*Default_RepeatedSint64_) isDefault_FieldType() {}

func (*Default_RepeatedFixed32_) isDefault_FieldType() {}

func (*Default_RepeatedFixed64_) isDefault_FieldType() {}

func (*Default_RepeatedSfixed32_) isDefault_FieldType() {}

func (*Default_RepeatedSfixed64_) isDefault_FieldType() {}

func (*Default_RepeatedBool_) isDefault_FieldType() {}

func (*Default_RepeatedString_) isDefault_FieldType() {}

func (*Default_RepeatedBytes_) isDefault_FieldType() {}

func (*Default_RepeatedEnum_) isDefault_FieldType() {}

func (*Default_RepeatedTimestamp_) isDefault_FieldType() {}

func (*Default_RepeatedDuration_) isDefault_FieldType() {}

func (*Default_RepeatedStruct_) isDefault_FieldType() {}

func (*Default_RepeatedValue_) isDefault_FieldType() {}

func (*Default_RepeatedMessage_) isDefault_FieldType() {}

func (*Default_Map_) isDefault_FieldType() {}

// Defaults for field with the "message" type
type Default_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether to populate the message with defaults or not
	FillDefaults bool `protobuf:"varint,1,opt,name=fill_defaults,json=fillDefaults,proto3" json:"fill_defaults,omitempty"`
}

func (x *Default_Message) Reset() {
	*x = Default_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_Message) ProtoMessage() {}

func (x *Default_Message) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_Message.ProtoReflect.Descriptor instead.
func (*Default_Message) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Default_Message) GetFillDefaults() bool {
	if x != nil {
		return x.FillDefaults
	}
	return false
}

// Defaults for repeated double fields
type Default_RepeatedDouble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []float64 `protobuf:"fixed64,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedDouble) Reset() {
	*x = Default_RepeatedDouble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedDouble) ProtoMessage() {}

func (x *Default_RepeatedDouble) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedDouble.ProtoReflect.Descriptor instead.
func (*Default_RepeatedDouble) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Default_RepeatedDouble) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated float fields
type Default_RepeatedFloat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []float32 `protobuf:"fixed32,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedFloat) Reset() {
	*x = Default_RepeatedFloat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedFloat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedFloat) ProtoMessage() {}

func (x *Default_RepeatedFloat) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedFloat.ProtoReflect.Descriptor instead.
func (*Default_RepeatedFloat) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Default_RepeatedFloat) GetValues() []float32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated int32 fields
type Default_RepeatedInt32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []int32 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedInt32) Reset() {
	*x = Default_RepeatedInt32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedInt32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedInt32) ProtoMessage() {}

func (x *Default_RepeatedInt32) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedInt32.ProtoReflect.Descriptor instead.
func (*Default_RepeatedInt32) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Default_RepeatedInt32) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated int64 fields
type Default_RepeatedInt64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []int64 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedInt64) Reset() {
	*x = Default_RepeatedInt64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedInt64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedInt64) ProtoMessage() {}

func (x *Default_RepeatedInt64) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedInt64.ProtoReflect.Descriptor instead.
func (*Default_RepeatedInt64) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Default_RepeatedInt64) GetValues() []int64 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated uint32 fields
type Default_RepeatedUint32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []uint32 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedUint32) Reset() {
	*x = Default_RepeatedUint32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedUint32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedUint32) ProtoMessage() {}

func (x *Default_RepeatedUint32) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedUint32.ProtoReflect.Descriptor instead.
func (*Default_RepeatedUint32) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Default_RepeatedUint32) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated uint64 fields
type Default_RepeatedUint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []uint64 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedUint64) Reset() {
	*x = Default_RepeatedUint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedUint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedUint64) ProtoMessage() {}

func (x *Default_RepeatedUint64) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedUint64.ProtoReflect.Descriptor instead.
func (*Default_RepeatedUint64) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Default_RepeatedUint64) GetValues() []uint64 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated sint32 fields
type Default_RepeatedSint32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []int32 `protobuf:"zigzag32,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedSint32) Reset() {
	*x = Default_RepeatedSint32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedSint32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedSint32) ProtoMessage() {}

func (x *Default_RepeatedSint32) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedSint32.ProtoReflect.Descriptor instead.
func (*Default_RepeatedSint32) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Default_RepeatedSint32) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated sint64 fields
type Default_RepeatedSint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []int64 `protobuf:"zigzag64,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedSint64) Reset() {
	*x = Default_RepeatedSint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedSint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedSint64) ProtoMessage() {}

func (x *Default_RepeatedSint64) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedSint64.ProtoReflect.Descriptor instead.
func (*Default_RepeatedSint64) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Default_RepeatedSint64) GetValues() []int64 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated fixed32 fields
type Default_RepeatedFixed32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []uint32 `protobuf:"fixed32,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedFixed32) Reset() {
	*x = Default_RepeatedFixed32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedFixed32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedFixed32) ProtoMessage() {}

func (x *Default_RepeatedFixed32) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedFixed32.ProtoReflect.Descriptor instead.
func (*Default_RepeatedFixed32) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Default_RepeatedFixed32) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated fixed64 fields
type Default_RepeatedFixed64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []uint64 `protobuf:"fixed64,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedFixed64) Reset() {
	*x = Default_RepeatedFixed64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedFixed64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedFixed64) ProtoMessage() {}

func (x *Default_RepeatedFixed64) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedFixed64.ProtoReflect.Descriptor instead.
func (*Default_RepeatedFixed64) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Default_RepeatedFixed64) GetValues() []uint64 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated sfixed32 fields
type Default_RepeatedSfixed32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []int32 `protobuf:"fixed32,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedSfixed32) Reset() {
	*x = Default_RepeatedSfixed32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedSfixed32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedSfixed32) ProtoMessage() {}

func (x *Default_RepeatedSfixed32) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedSfixed32.ProtoReflect.Descriptor instead.
func (*Default_RepeatedSfixed32) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Default_RepeatedSfixed32) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated sfixed64 fields
type Default_RepeatedSfixed64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []int64 `protobuf:"fixed64,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedSfixed64) Reset() {
	*x = Default_RepeatedSfixed64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedSfixed64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedSfixed64) ProtoMessage() {}

func (x *Default_RepeatedSfixed64) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedSfixed64.ProtoReflect.Descriptor instead.
func (*Default_RepeatedSfixed64) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Default_RepeatedSfixed64) GetValues() []int64 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated bool fields
type Default_RepeatedBool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []bool `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedBool) Reset() {
	*x = Default_RepeatedBool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedBool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedBool) ProtoMessage() {}

func (x *Default_RepeatedBool) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedBool.ProtoReflect.Descriptor instead.
func (*Default_RepeatedBool) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Default_RepeatedBool) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated string fields
type Default_RepeatedString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedString) Reset() {
	*x = Default_RepeatedString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedString) ProtoMessage() {}

func (x *Default_RepeatedString) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedString.ProtoReflect.Descriptor instead.
func (*Default_RepeatedString) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Default_RepeatedString) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated bytes fields
type Default_RepeatedBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values. Each bytes value should be base64 encoded.
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedBytes) Reset() {
	*x = Default_RepeatedBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedBytes) ProtoMessage() {}

func (x *Default_RepeatedBytes) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedBytes.ProtoReflect.Descriptor instead.
func (*Default_RepeatedBytes) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Default_RepeatedBytes) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated enum fields
type Default_RepeatedEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values. Each value should be the string value of an enum option.
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedEnum) Reset() {
	*x = Default_RepeatedEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedEnum) ProtoMessage() {}

func (x *Default_RepeatedEnum) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedEnum.ProtoReflect.Descriptor instead.
func (*Default_RepeatedEnum) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 16}
}

func (x *Default_RepeatedEnum) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated google.protobuf.Timestamp fields
type Default_RepeatedTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedTimestamp) Reset() {
	*x = Default_RepeatedTimestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedTimestamp) ProtoMessage() {}

func (x *Default_RepeatedTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedTimestamp.ProtoReflect.Descriptor instead.
func (*Default_RepeatedTimestamp) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 17}
}

func (x *Default_RepeatedTimestamp) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated google.protobuf.Duration fields
type Default_RepeatedDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedDuration) Reset() {
	*x = Default_RepeatedDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedDuration) ProtoMessage() {}

func (x *Default_RepeatedDuration) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedDuration.ProtoReflect.Descriptor instead.
func (*Default_RepeatedDuration) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 18}
}

func (x *Default_RepeatedDuration) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated google.protobuf.Struct fields
type Default_RepeatedStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values. Each value should be a valid JSON object.
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedStruct) Reset() {
	*x = Default_RepeatedStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedStruct) ProtoMessage() {}

func (x *Default_RepeatedStruct) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedStruct.ProtoReflect.Descriptor instead.
func (*Default_RepeatedStruct) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 19}
}

func (x *Default_RepeatedStruct) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated google.protobuf.Value fields
type Default_RepeatedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values. Each value should be a valid JSON value (e.g. "foo", or 123, or false, or null, etc...).
	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedValue) Reset() {
	*x = Default_RepeatedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedValue) ProtoMessage() {}

func (x *Default_RepeatedValue) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedValue.ProtoReflect.Descriptor instead.
func (*Default_RepeatedValue) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 20}
}

func (x *Default_RepeatedValue) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for repeated message fields (excluding some well-known types like timestamp, duration, struct and value).
type Default_RepeatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default values
	Values []*Default_Message `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_RepeatedMessage) Reset() {
	*x = Default_RepeatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RepeatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RepeatedMessage) ProtoMessage() {}

func (x *Default_RepeatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RepeatedMessage.ProtoReflect.Descriptor instead.
func (*Default_RepeatedMessage) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 21}
}

func (x *Default_RepeatedMessage) GetValues() []*Default_Message {
	if x != nil {
		return x.Values
	}
	return nil
}

// Defaults for map fields
type Default_Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of default entries of this map, each entry should have the same key / value type as the map field this
	// option is set on.
	Values []*Default_Map_Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Default_Map) Reset() {
	*x = Default_Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_Map) ProtoMessage() {}

func (x *Default_Map) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_Map.ProtoReflect.Descriptor instead.
func (*Default_Map) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 22}
}

func (x *Default_Map) GetValues() []*Default_Map_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

// Default option for an entry in a map
type Default_Map_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of the key of the map
	//
	// Types that are assignable to KeyType:
	//
	//	*Default_Map_Value_Int32Key
	//	*Default_Map_Value_Int64Key
	//	*Default_Map_Value_Uint32Key
	//	*Default_Map_Value_Uint64Key
	//	*Default_Map_Value_Sint32Key
	//	*Default_Map_Value_Sint64Key
	//	*Default_Map_Value_Fixed32Key
	//	*Default_Map_Value_Fixed64Key
	//	*Default_Map_Value_Sfixed32Key
	//	*Default_Map_Value_Sfixed64Key
	//	*Default_Map_Value_BoolKey
	//	*Default_Map_Value_StringKey
	KeyType isDefault_Map_Value_KeyType `protobuf_oneof:"key_type"`
	// Type of the value of the map
	//
	// Types that are assignable to ValueType:
	//
	//	*Default_Map_Value_DoubleValue
	//	*Default_Map_Value_FloatValue
	//	*Default_Map_Value_Int32Value
	//	*Default_Map_Value_Int64Value
	//	*Default_Map_Value_Uint32Value
	//	*Default_Map_Value_Uint64Value
	//	*Default_Map_Value_Sint32Value
	//	*Default_Map_Value_Sint64Value
	//	*Default_Map_Value_Fixed32Value
	//	*Default_Map_Value_Fixed64Value
	//	*Default_Map_Value_Sfixed32Value
	//	*Default_Map_Value_Sfixed64Value
	//	*Default_Map_Value_BoolValue
	//	*Default_Map_Value_StringValue
	//	*Default_Map_Value_BytesValue
	//	*Default_Map_Value_EnumValue
	//	*Default_Map_Value_TimestampValue
	//	*Default_Map_Value_DurationValue
	//	*Default_Map_Value_StructValue
	//	*Default_Map_Value_ValueValue
	//	*Default_Map_Value_MessageValue
	ValueType isDefault_Map_Value_ValueType `protobuf_oneof:"value_type"`
}

func (x *Default_Map_Value) Reset() {
	*x = Default_Map_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_confpb_v1_field_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_Map_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_Map_Value) ProtoMessage() {}

func (x *Default_Map_Value) ProtoReflect() protoreflect.Message {
	mi := &file_confpb_v1_field_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_Map_Value.ProtoReflect.Descriptor instead.
func (*Default_Map_Value) Descriptor() ([]byte, []int) {
	return file_confpb_v1_field_proto_rawDescGZIP(), []int{0, 22, 0}
}

func (m *Default_Map_Value) GetKeyType() isDefault_Map_Value_KeyType {
	if m != nil {
		return m.KeyType
	}
	return nil
}

func (x *Default_Map_Value) GetInt32Key() int32 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Int32Key); ok {
		return x.Int32Key
	}
	return 0
}

func (x *Default_Map_Value) GetInt64Key() int64 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Int64Key); ok {
		return x.Int64Key
	}
	return 0
}

func (x *Default_Map_Value) GetUint32Key() uint32 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Uint32Key); ok {
		return x.Uint32Key
	}
	return 0
}

func (x *Default_Map_Value) GetUint64Key() uint64 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Uint64Key); ok {
		return x.Uint64Key
	}
	return 0
}

func (x *Default_Map_Value) GetSint32Key() int32 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Sint32Key); ok {
		return x.Sint32Key
	}
	return 0
}

func (x *Default_Map_Value) GetSint64Key() int64 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Sint64Key); ok {
		return x.Sint64Key
	}
	return 0
}

func (x *Default_Map_Value) GetFixed32Key() uint32 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Fixed32Key); ok {
		return x.Fixed32Key
	}
	return 0
}

func (x *Default_Map_Value) GetFixed64Key() uint64 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Fixed64Key); ok {
		return x.Fixed64Key
	}
	return 0
}

func (x *Default_Map_Value) GetSfixed32Key() int32 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Sfixed32Key); ok {
		return x.Sfixed32Key
	}
	return 0
}

func (x *Default_Map_Value) GetSfixed64Key() int64 {
	if x, ok := x.GetKeyType().(*Default_Map_Value_Sfixed64Key); ok {
		return x.Sfixed64Key
	}
	return 0
}

func (x *Default_Map_Value) GetBoolKey() bool {
	if x, ok := x.GetKeyType().(*Default_Map_Value_BoolKey); ok {
		return x.BoolKey
	}
	return false
}

func (x *Default_Map_Value) GetStringKey() string {
	if x, ok := x.GetKeyType().(*Default_Map_Value_StringKey); ok {
		return x.StringKey
	}
	return ""
}

func (m *Default_Map_Value) GetValueType() isDefault_Map_Value_ValueType {
	if m != nil {
		return m.ValueType
	}
	return nil
}

func (x *Default_Map_Value) GetDoubleValue() float64 {
	if x, ok := x.GetValueType().(*Default_Map_Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (x *Default_Map_Value) GetFloatValue() float32 {
	if x, ok := x.GetValueType().(*Default_Map_Value_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *Default_Map_Value) GetInt32Value() int32 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Int32Value); ok {
		return x.Int32Value
	}
	return 0
}

func (x *Default_Map_Value) GetInt64Value() int64 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (x *Default_Map_Value) GetUint32Value() uint32 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Uint32Value); ok {
		return x.Uint32Value
	}
	return 0
}

func (x *Default_Map_Value) GetUint64Value() uint64 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Uint64Value); ok {
		return x.Uint64Value
	}
	return 0
}

func (x *Default_Map_Value) GetSint32Value() int32 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Sint32Value); ok {
		return x.Sint32Value
	}
	return 0
}

func (x *Default_Map_Value) GetSint64Value() int64 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Sint64Value); ok {
		return x.Sint64Value
	}
	return 0
}

func (x *Default_Map_Value) GetFixed32Value() uint32 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Fixed32Value); ok {
		return x.Fixed32Value
	}
	return 0
}

func (x *Default_Map_Value) GetFixed64Value() uint64 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Fixed64Value); ok {
		return x.Fixed64Value
	}
	return 0
}

func (x *Default_Map_Value) GetSfixed32Value() int32 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Sfixed32Value); ok {
		return x.Sfixed32Value
	}
	return 0
}

func (x *Default_Map_Value) GetSfixed64Value() int64 {
	if x, ok := x.GetValueType().(*Default_Map_Value_Sfixed64Value); ok {
		return x.Sfixed64Value
	}
	return 0
}

func (x *Default_Map_Value) GetBoolValue() bool {
	if x, ok := x.GetValueType().(*Default_Map_Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *Default_Map_Value) GetStringValue() string {
	if x, ok := x.GetValueType().(*Default_Map_Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Default_Map_Value) GetBytesValue() string {
	if x, ok := x.GetValueType().(*Default_Map_Value_BytesValue); ok {
		return x.BytesValue
	}
	return ""
}

func (x *Default_Map_Value) GetEnumValue() string {
	if x, ok := x.GetValueType().(*Default_Map_Value_EnumValue); ok {
		return x.EnumValue
	}
	return ""
}

func (x *Default_Map_Value) GetTimestampValue() string {
	if x, ok := x.GetValueType().(*Default_Map_Value_TimestampValue); ok {
		return x.TimestampValue
	}
	return ""
}

func (x *Default_Map_Value) GetDurationValue() string {
	if x, ok := x.GetValueType().(*Default_Map_Value_DurationValue); ok {
		return x.DurationValue
	}
	return ""
}

func (x *Default_Map_Value) GetStructValue() string {
	if x, ok := x.GetValueType().(*Default_Map_Value_StructValue); ok {
		return x.StructValue
	}
	return ""
}

func (x *Default_Map_Value) GetValueValue() string {
	if x, ok := x.GetValueType().(*Default_Map_Value_ValueValue); ok {
		return x.ValueValue
	}
	return ""
}

func (x *Default_Map_Value) GetMessageValue() *Default_Message {
	if x, ok := x.GetValueType().(*Default_Map_Value_MessageValue); ok {
		return x.MessageValue
	}
	return nil
}

type isDefault_Map_Value_KeyType interface {
	isDefault_Map_Value_KeyType()
}

type Default_Map_Value_Int32Key struct {
	// Default key for maps with the key type "int32"
	Int32Key int32 `protobuf:"varint,1,opt,name=int32_key,json=int32Key,proto3,oneof"`
}

type Default_Map_Value_Int64Key struct {
	// Default key for maps with the key type "int64"
	Int64Key int64 `protobuf:"varint,2,opt,name=int64_key,json=int64Key,proto3,oneof"`
}

type Default_Map_Value_Uint32Key struct {
	// Default key for maps with the key type "uint32"
	Uint32Key uint32 `protobuf:"varint,3,opt,name=uint32_key,json=uint32Key,proto3,oneof"`
}

type Default_Map_Value_Uint64Key struct {
	// Default key for maps with the key type "uint64"
	Uint64Key uint64 `protobuf:"varint,4,opt,name=uint64_key,json=uint64Key,proto3,oneof"`
}

type Default_Map_Value_Sint32Key struct {
	// Default key for maps with the key type "sint32"
	Sint32Key int32 `protobuf:"zigzag32,5,opt,name=sint32_key,json=sint32Key,proto3,oneof"`
}

type Default_Map_Value_Sint64Key struct {
	// Default key for maps with the key type "sint64"
	Sint64Key int64 `protobuf:"zigzag64,6,opt,name=sint64_key,json=sint64Key,proto3,oneof"`
}

type Default_Map_Value_Fixed32Key struct {
	// Default key for maps with the key type "fixed32"
	Fixed32Key uint32 `protobuf:"fixed32,7,opt,name=fixed32_key,json=fixed32Key,proto3,oneof"`
}

type Default_Map_Value_Fixed64Key struct {
	// Default key for maps with the key type "fixed64"
	Fixed64Key uint64 `protobuf:"fixed64,8,opt,name=fixed64_key,json=fixed64Key,proto3,oneof"`
}

type Default_Map_Value_Sfixed32Key struct {
	// Default key for maps with the key type "sfixed32"
	Sfixed32Key int32 `protobuf:"fixed32,9,opt,name=sfixed32_key,json=sfixed32Key,proto3,oneof"`
}

type Default_Map_Value_Sfixed64Key struct {
	// Default key for maps with the key type "sfixed64"
	Sfixed64Key int64 `protobuf:"fixed64,10,opt,name=sfixed64_key,json=sfixed64Key,proto3,oneof"`
}

type Default_Map_Value_BoolKey struct {
	// Default key for maps with the key type "bool"
	BoolKey bool `protobuf:"varint,11,opt,name=bool_key,json=boolKey,proto3,oneof"`
}

type Default_Map_Value_StringKey struct {
	// Default key for maps with the key type "string"
	StringKey string `protobuf:"bytes,12,opt,name=string_key,json=stringKey,proto3,oneof"`
}

func (*Default_Map_Value_Int32Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_Int64Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_Uint32Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_Uint64Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_Sint32Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_Sint64Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_Fixed32Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_Fixed64Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_Sfixed32Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_Sfixed64Key) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_BoolKey) isDefault_Map_Value_KeyType() {}

func (*Default_Map_Value_StringKey) isDefault_Map_Value_KeyType() {}

type isDefault_Map_Value_ValueType interface {
	isDefault_Map_Value_ValueType()
}

type Default_Map_Value_DoubleValue struct {
	// Default value for maps with the value type "double"
	DoubleValue float64 `protobuf:"fixed64,13,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Default_Map_Value_FloatValue struct {
	// Default value for maps with the value type "float"
	FloatValue float32 `protobuf:"fixed32,14,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Default_Map_Value_Int32Value struct {
	// Default value for maps with the value type "int32"
	Int32Value int32 `protobuf:"varint,15,opt,name=int32_value,json=int32Value,proto3,oneof"`
}

type Default_Map_Value_Int64Value struct {
	// Default value for maps with the value type "int64"
	Int64Value int64 `protobuf:"varint,16,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type Default_Map_Value_Uint32Value struct {
	// Default value for maps with the value type "uint32"
	Uint32Value uint32 `protobuf:"varint,17,opt,name=uint32_value,json=uint32Value,proto3,oneof"`
}

type Default_Map_Value_Uint64Value struct {
	// Default value for maps with the value type "uint64"
	Uint64Value uint64 `protobuf:"varint,18,opt,name=uint64_value,json=uint64Value,proto3,oneof"`
}

type Default_Map_Value_Sint32Value struct {
	// Default value for maps with the value type "sint32"
	Sint32Value int32 `protobuf:"zigzag32,19,opt,name=sint32_value,json=sint32Value,proto3,oneof"`
}

type Default_Map_Value_Sint64Value struct {
	// Default value for maps with the value type "sint64"
	Sint64Value int64 `protobuf:"zigzag64,20,opt,name=sint64_value,json=sint64Value,proto3,oneof"`
}

type Default_Map_Value_Fixed32Value struct {
	// Default value for maps with the value type "fixed32"
	Fixed32Value uint32 `protobuf:"fixed32,21,opt,name=fixed32_value,json=fixed32Value,proto3,oneof"`
}

type Default_Map_Value_Fixed64Value struct {
	// Default value for maps with the value type "fixed64"
	Fixed64Value uint64 `protobuf:"fixed64,22,opt,name=fixed64_value,json=fixed64Value,proto3,oneof"`
}

type Default_Map_Value_Sfixed32Value struct {
	// Default value for maps with the value type "sfixed32"
	Sfixed32Value int32 `protobuf:"fixed32,23,opt,name=sfixed32_value,json=sfixed32Value,proto3,oneof"`
}

type Default_Map_Value_Sfixed64Value struct {
	// Default value for maps with the value type "sfixed64"
	Sfixed64Value int64 `protobuf:"fixed64,24,opt,name=sfixed64_value,json=sfixed64Value,proto3,oneof"`
}

type Default_Map_Value_BoolValue struct {
	// Default value for maps with the value type "bool"
	BoolValue bool `protobuf:"varint,25,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Default_Map_Value_StringValue struct {
	// Default value for maps with the value type "string"
	StringValue string `protobuf:"bytes,26,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Default_Map_Value_BytesValue struct {
	// Default value for maps with the value type "bytes". Default value should be base64 encoded.
	BytesValue string `protobuf:"bytes,27,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type Default_Map_Value_EnumValue struct {
	// Default value for maps with the value type "enum".
	EnumValue string `protobuf:"bytes,28,opt,name=enum_value,json=enumValue,proto3,oneof"`
}

type Default_Map_Value_TimestampValue struct {
	// Default value for maps with the value type "google.protobuf.Timestamp". Default value should be an RFC3339 string.
	TimestampValue string `protobuf:"bytes,29,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

type Default_Map_Value_DurationValue struct {
	// Default value for maps with the value type "google.protobuf.Duration". Default value should be supplied as a duration string (e.g. 10s).
	DurationValue string `protobuf:"bytes,30,opt,name=duration_value,json=durationValue,proto3,oneof"`
}

type Default_Map_Value_StructValue struct {
	// Default value for maps with the value type "google.protobuf.Struct". Default value should be a JSON object.
	StructValue string `protobuf:"bytes,31,opt,name=struct_value,json=structValue,proto3,oneof"`
}

type Default_Map_Value_ValueValue struct {
	// Default value for maps with the value type "google.protobuf.Value". Default value should be a JSON value.
	ValueValue string `protobuf:"bytes,32,opt,name=value_value,json=valueValue,proto3,oneof"`
}

type Default_Map_Value_MessageValue struct {
	// Default value for maps with the value type "message".
	MessageValue *Default_Message `protobuf:"bytes,33,opt,name=message_value,json=messageValue,proto3,oneof"`
}

func (*Default_Map_Value_DoubleValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_FloatValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Int32Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Int64Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Uint32Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Uint64Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Sint32Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Sint64Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Fixed32Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Fixed64Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Sfixed32Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_Sfixed64Value) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_BoolValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_StringValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_BytesValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_EnumValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_TimestampValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_DurationValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_StructValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_ValueValue) isDefault_Map_Value_ValueType() {}

func (*Default_Map_Value_MessageValue) isDefault_Map_Value_ValueType() {}

var file_confpb_v1_field_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         1200,
		Name:          "confpb.v1.env",
		Tag:           "bytes,1200,opt,name=env",
		Filename:      "confpb/v1/field.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*Default)(nil),
		Field:         1201,
		Name:          "confpb.v1.default",
		Tag:           "bytes,1201,opt,name=default",
		Filename:      "confpb/v1/field.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// Specify environment variable mapping for a message field.
	// Value should be the environment variable to bind the protobuf field to.
	// This value might be prefixed if the field is part of a message that is embedded in another message.
	//
	// optional string env = 1200;
	E_Env = &file_confpb_v1_field_proto_extTypes[0]
	// Specify default value for a message field
	//
	// optional confpb.v1.Default default = 1201;
	E_Default = &file_confpb_v1_field_proto_extTypes[1]
)

var File_confpb_v1_field_proto protoreflect.FileDescriptor

var file_confpb_v1_field_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x23, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x18, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x06,
	0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06,
	0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x18, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x07, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x48, 0x00, 0x52, 0x07, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x12, 0x1c, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0f, 0x48, 0x00, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x12, 0x1c, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x10, 0x48, 0x00, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x14,
	0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04,
	0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x48, 0x00, 0x52, 0x0d,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x49, 0x0a,
	0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x49, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x12, 0x4c, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x48,
	0x00, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x12, 0x4c, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x48, 0x00, 0x52,
	0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12,
	0x4c, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x48, 0x00, 0x52, 0x0e, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x4c, 0x0a,
	0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x4f, 0x0a, 0x10, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x4f, 0x0a, 0x10,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x52, 0x0a,
	0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x48, 0x00, 0x52,
	0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x12, 0x52, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x46, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x48, 0x00, 0x52,
	0x0c, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x4c, 0x0a,
	0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x0e, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00,
	0x52, 0x0c, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x55,
	0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x52, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0f, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x49, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x2e, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a,
	0x2e, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69,
	0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a,
	0x28, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x27, 0x0a, 0x0d, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x1a, 0x27, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x27, 0x0a, 0x0d, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x1a, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x28,
	0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x11, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x1a, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x12, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x29, 0x0a, 0x0f,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x07, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x29, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x06, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x1a, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x2a,
	0x0a, 0x10, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x10, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x26, 0x0a, 0x0c, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x1a, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x27, 0x0a, 0x0d,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x26, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x2b, 0x0a,
	0x11, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x2a, 0x0a, 0x10, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x1a, 0x27, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x45, 0x0a, 0x0f, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x1a, 0x9a, 0x0a, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x34, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x4d, 0x61, 0x70,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0xdc,
	0x09, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x09, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x75,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x48, 0x00, 0x52,
	0x09, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x07, 0x48,
	0x00, 0x52, 0x0a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a,
	0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x06, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x4b, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x0c, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0f, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x10, 0x48, 0x00, 0x52, 0x0b, 0x73,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x6f,
	0x6f, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07,
	0x62, 0x6f, 0x6f, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01,
	0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a,
	0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x01, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x21, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x0b,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x75,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x01, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x23, 0x0a, 0x0c, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x11, 0x48, 0x01, 0x52, 0x0b, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x12, 0x48, 0x01, 0x52, 0x0b, 0x73,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x07, 0x48, 0x01, 0x52, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x25, 0x0a, 0x0d, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x06, 0x48, 0x01, 0x52, 0x0c, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0f,
	0x48, 0x01, 0x52, 0x0d, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x27, 0x0a, 0x0e, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x10, 0x48, 0x01, 0x52, 0x0d, 0x73, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f,
	0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01,
	0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x21, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x27, 0x0a, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x41, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x33, 0x0a, 0x03, 0x65,
	0x6e, 0x76, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xb0, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x88, 0x01, 0x01,
	0x3a, 0x4f, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb1, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x61, 0x72, 0x6e, 0x69, 0x78, 0x62, 0x6f, 0x75, 0x68, 0x75, 0x69, 0x73, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x70, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x70, 0x62, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_confpb_v1_field_proto_rawDescOnce sync.Once
	file_confpb_v1_field_proto_rawDescData = file_confpb_v1_field_proto_rawDesc
)

func file_confpb_v1_field_proto_rawDescGZIP() []byte {
	file_confpb_v1_field_proto_rawDescOnce.Do(func() {
		file_confpb_v1_field_proto_rawDescData = protoimpl.X.CompressGZIP(file_confpb_v1_field_proto_rawDescData)
	})
	return file_confpb_v1_field_proto_rawDescData
}

var file_confpb_v1_field_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_confpb_v1_field_proto_goTypes = []any{
	(*Default)(nil),                   // 0: confpb.v1.Default
	(*Default_Message)(nil),           // 1: confpb.v1.Default.Message
	(*Default_RepeatedDouble)(nil),    // 2: confpb.v1.Default.RepeatedDouble
	(*Default_RepeatedFloat)(nil),     // 3: confpb.v1.Default.RepeatedFloat
	(*Default_RepeatedInt32)(nil),     // 4: confpb.v1.Default.RepeatedInt32
	(*Default_RepeatedInt64)(nil),     // 5: confpb.v1.Default.RepeatedInt64
	(*Default_RepeatedUint32)(nil),    // 6: confpb.v1.Default.RepeatedUint32
	(*Default_RepeatedUint64)(nil),    // 7: confpb.v1.Default.RepeatedUint64
	(*Default_RepeatedSint32)(nil),    // 8: confpb.v1.Default.RepeatedSint32
	(*Default_RepeatedSint64)(nil),    // 9: confpb.v1.Default.RepeatedSint64
	(*Default_RepeatedFixed32)(nil),   // 10: confpb.v1.Default.RepeatedFixed32
	(*Default_RepeatedFixed64)(nil),   // 11: confpb.v1.Default.RepeatedFixed64
	(*Default_RepeatedSfixed32)(nil),  // 12: confpb.v1.Default.RepeatedSfixed32
	(*Default_RepeatedSfixed64)(nil),  // 13: confpb.v1.Default.RepeatedSfixed64
	(*Default_RepeatedBool)(nil),      // 14: confpb.v1.Default.RepeatedBool
	(*Default_RepeatedString)(nil),    // 15: confpb.v1.Default.RepeatedString
	(*Default_RepeatedBytes)(nil),     // 16: confpb.v1.Default.RepeatedBytes
	(*Default_RepeatedEnum)(nil),      // 17: confpb.v1.Default.RepeatedEnum
	(*Default_RepeatedTimestamp)(nil), // 18: confpb.v1.Default.RepeatedTimestamp
	(*Default_RepeatedDuration)(nil),  // 19: confpb.v1.Default.RepeatedDuration
	(*Default_RepeatedStruct)(nil),    // 20: confpb.v1.Default.RepeatedStruct
	(*Default_RepeatedValue)(nil),     // 21: confpb.v1.Default.RepeatedValue
	(*Default_RepeatedMessage)(nil),   // 22: confpb.v1.Default.RepeatedMessage
	(*Default_Map)(nil),               // 23: confpb.v1.Default.Map
	(*Default_Map_Value)(nil),         // 24: confpb.v1.Default.Map.Value
	(*descriptorpb.FieldOptions)(nil), // 25: google.protobuf.FieldOptions
}
var file_confpb_v1_field_proto_depIdxs = []int32{
	1,  // 0: confpb.v1.Default.message:type_name -> confpb.v1.Default.Message
	2,  // 1: confpb.v1.Default.repeated_double:type_name -> confpb.v1.Default.RepeatedDouble
	3,  // 2: confpb.v1.Default.repeated_float:type_name -> confpb.v1.Default.RepeatedFloat
	4,  // 3: confpb.v1.Default.repeated_int32:type_name -> confpb.v1.Default.RepeatedInt32
	5,  // 4: confpb.v1.Default.repeated_int64:type_name -> confpb.v1.Default.RepeatedInt64
	6,  // 5: confpb.v1.Default.repeated_uint32:type_name -> confpb.v1.Default.RepeatedUint32
	7,  // 6: confpb.v1.Default.repeated_uint64:type_name -> confpb.v1.Default.RepeatedUint64
	8,  // 7: confpb.v1.Default.repeated_sint32:type_name -> confpb.v1.Default.RepeatedSint32
	9,  // 8: confpb.v1.Default.repeated_sint64:type_name -> confpb.v1.Default.RepeatedSint64
	10, // 9: confpb.v1.Default.repeated_fixed32:type_name -> confpb.v1.Default.RepeatedFixed32
	11, // 10: confpb.v1.Default.repeated_fixed64:type_name -> confpb.v1.Default.RepeatedFixed64
	12, // 11: confpb.v1.Default.repeated_sfixed32:type_name -> confpb.v1.Default.RepeatedSfixed32
	13, // 12: confpb.v1.Default.repeated_sfixed64:type_name -> confpb.v1.Default.RepeatedSfixed64
	14, // 13: confpb.v1.Default.repeated_bool:type_name -> confpb.v1.Default.RepeatedBool
	15, // 14: confpb.v1.Default.repeated_string:type_name -> confpb.v1.Default.RepeatedString
	16, // 15: confpb.v1.Default.repeated_bytes:type_name -> confpb.v1.Default.RepeatedBytes
	17, // 16: confpb.v1.Default.repeated_enum:type_name -> confpb.v1.Default.RepeatedEnum
	18, // 17: confpb.v1.Default.repeated_timestamp:type_name -> confpb.v1.Default.RepeatedTimestamp
	19, // 18: confpb.v1.Default.repeated_duration:type_name -> confpb.v1.Default.RepeatedDuration
	20, // 19: confpb.v1.Default.repeated_struct:type_name -> confpb.v1.Default.RepeatedStruct
	21, // 20: confpb.v1.Default.repeated_value:type_name -> confpb.v1.Default.RepeatedValue
	22, // 21: confpb.v1.Default.repeated_message:type_name -> confpb.v1.Default.RepeatedMessage
	23, // 22: confpb.v1.Default.map:type_name -> confpb.v1.Default.Map
	1,  // 23: confpb.v1.Default.RepeatedMessage.values:type_name -> confpb.v1.Default.Message
	24, // 24: confpb.v1.Default.Map.values:type_name -> confpb.v1.Default.Map.Value
	1,  // 25: confpb.v1.Default.Map.Value.message_value:type_name -> confpb.v1.Default.Message
	25, // 26: confpb.v1.env:extendee -> google.protobuf.FieldOptions
	25, // 27: confpb.v1.default:extendee -> google.protobuf.FieldOptions
	0,  // 28: confpb.v1.default:type_name -> confpb.v1.Default
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	28, // [28:29] is the sub-list for extension type_name
	26, // [26:28] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_confpb_v1_field_proto_init() }
func file_confpb_v1_field_proto_init() {
	if File_confpb_v1_field_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_confpb_v1_field_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Default); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Default_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedDouble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedFloat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedInt32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedInt64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedUint32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedUint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedSint32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedSint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedFixed32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedFixed64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedSfixed32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedSfixed64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedBool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedTimestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Default_RepeatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Default_Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_confpb_v1_field_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Default_Map_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_confpb_v1_field_proto_msgTypes[0].OneofWrappers = []any{
		(*Default_Double)(nil),
		(*Default_Float)(nil),
		(*Default_Int32)(nil),
		(*Default_Int64)(nil),
		(*Default_Uint32)(nil),
		(*Default_Uint64)(nil),
		(*Default_Sint32)(nil),
		(*Default_Sint64)(nil),
		(*Default_Fixed32)(nil),
		(*Default_Fixed64)(nil),
		(*Default_Sfixed32)(nil),
		(*Default_Sfixed64)(nil),
		(*Default_Bool)(nil),
		(*Default_String_)(nil),
		(*Default_Bytes)(nil),
		(*Default_Enum)(nil),
		(*Default_Timestamp)(nil),
		(*Default_Duration)(nil),
		(*Default_Struct)(nil),
		(*Default_Value)(nil),
		(*Default_Message_)(nil),
		(*Default_RepeatedDouble_)(nil),
		(*Default_RepeatedFloat_)(nil),
		(*Default_RepeatedInt32_)(nil),
		(*Default_RepeatedInt64_)(nil),
		(*Default_RepeatedUint32_)(nil),
		(*Default_RepeatedUint64_)(nil),
		(*Default_RepeatedSint32_)(nil),
		(*Default_RepeatedSint64_)(nil),
		(*Default_RepeatedFixed32_)(nil),
		(*Default_RepeatedFixed64_)(nil),
		(*Default_RepeatedSfixed32_)(nil),
		(*Default_RepeatedSfixed64_)(nil),
		(*Default_RepeatedBool_)(nil),
		(*Default_RepeatedString_)(nil),
		(*Default_RepeatedBytes_)(nil),
		(*Default_RepeatedEnum_)(nil),
		(*Default_RepeatedTimestamp_)(nil),
		(*Default_RepeatedDuration_)(nil),
		(*Default_RepeatedStruct_)(nil),
		(*Default_RepeatedValue_)(nil),
		(*Default_RepeatedMessage_)(nil),
		(*Default_Map_)(nil),
	}
	file_confpb_v1_field_proto_msgTypes[24].OneofWrappers = []any{
		(*Default_Map_Value_Int32Key)(nil),
		(*Default_Map_Value_Int64Key)(nil),
		(*Default_Map_Value_Uint32Key)(nil),
		(*Default_Map_Value_Uint64Key)(nil),
		(*Default_Map_Value_Sint32Key)(nil),
		(*Default_Map_Value_Sint64Key)(nil),
		(*Default_Map_Value_Fixed32Key)(nil),
		(*Default_Map_Value_Fixed64Key)(nil),
		(*Default_Map_Value_Sfixed32Key)(nil),
		(*Default_Map_Value_Sfixed64Key)(nil),
		(*Default_Map_Value_BoolKey)(nil),
		(*Default_Map_Value_StringKey)(nil),
		(*Default_Map_Value_DoubleValue)(nil),
		(*Default_Map_Value_FloatValue)(nil),
		(*Default_Map_Value_Int32Value)(nil),
		(*Default_Map_Value_Int64Value)(nil),
		(*Default_Map_Value_Uint32Value)(nil),
		(*Default_Map_Value_Uint64Value)(nil),
		(*Default_Map_Value_Sint32Value)(nil),
		(*Default_Map_Value_Sint64Value)(nil),
		(*Default_Map_Value_Fixed32Value)(nil),
		(*Default_Map_Value_Fixed64Value)(nil),
		(*Default_Map_Value_Sfixed32Value)(nil),
		(*Default_Map_Value_Sfixed64Value)(nil),
		(*Default_Map_Value_BoolValue)(nil),
		(*Default_Map_Value_StringValue)(nil),
		(*Default_Map_Value_BytesValue)(nil),
		(*Default_Map_Value_EnumValue)(nil),
		(*Default_Map_Value_TimestampValue)(nil),
		(*Default_Map_Value_DurationValue)(nil),
		(*Default_Map_Value_StructValue)(nil),
		(*Default_Map_Value_ValueValue)(nil),
		(*Default_Map_Value_MessageValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_confpb_v1_field_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_confpb_v1_field_proto_goTypes,
		DependencyIndexes: file_confpb_v1_field_proto_depIdxs,
		MessageInfos:      file_confpb_v1_field_proto_msgTypes,
		ExtensionInfos:    file_confpb_v1_field_proto_extTypes,
	}.Build()
	File_confpb_v1_field_proto = out.File
	file_confpb_v1_field_proto_rawDesc = nil
	file_confpb_v1_field_proto_goTypes = nil
	file_confpb_v1_field_proto_depIdxs = nil
}
